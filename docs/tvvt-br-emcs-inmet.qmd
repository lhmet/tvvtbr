---
title: "TVVT do Brasil a partir de dados de EMC do INMET"
author: "JDT"
format: html
editor: source
editor_options: 
  chunk_output_type: inline
knitr: 
  opts_chunk:
    comment: "#>"
    collapse: true
    #fig-width: 7
    #out-width: '70%'
    #fig-asp: 0.618
    fig-align: 'center'
    code-fold: true
---

## Introdução

Esta atividade tem por objetivo obter a taxa de variação vertical da temperatura do ar (TVVT) a partir dos dados de temperatura das estações meteorológicas convencionais (EMC) do INMET e compará-la com a TVVT média global (*Lapse rate* da atmosfera padrão) de -6,5°C/km. 

As informações de localização e altitude estão disponíveis em [https://portal.inmet.gov.br/uploads/normais/Normal-Climatologica-ESTA%C3%87%C3%95ES.xlsx](). 

A temperatura do ar média (T~med~) anual climatológica de 1991-2010 será usada para determinar a TVVT. Para obter a temperatura média faremos: $T_{med} = (T_{max} + T_{min})/2$, em que $T_{max}$ é a tmperatura máxima do ar e $T_{min}$ a mínima. Estes dados podem ser baixados em [https://portal.inmet.gov.br/uploads/normais/Normal-Climatologica-TMAX.xlsx]() e [https://portal.inmet.gov.br/uploads/normais/Normal-Climatologica-TMIN.xlsx]().

## Pré-requisitos

Este documento foi elaborado para ilustrar como você pode se beneficiar ao usar o [R](https://www.r-project.org/) e o [RStudio](https://posit.co/download/rstudio-desktop/) como ferramentas de trabalho para manipulação e análise de dados.

Você pode pensar neste documento como um relatório dinâmico e reproduzível. Dinâmico porque você pode fazer mudanças e ao clicar em `Render` (no menu do RStudio) seu relatório será atualizado. Reproduzível porque você passar este arquivo (`relatorio-atividade1-temo.qmd)` para outras pessoas (ou você mesmo no futuro pode reutilizá-lo) que poderão reproduzir os resultados que você encontrou num computador (com [R](https://www.r-project.org/) e [RStudio](https://posit.co/download/rstudio-desktop/)) deles.

### Pacotes necessários

Os pacotes abaixo serão necessários e precisam ser instalados com o código a seguir.

```{r}
#| label: instala-pacotes
#| eval: false

install.packages("pacman")
```

```{r}
#| label: carrega-pacotes
#| message: false
#| warning: false

pacotes <- c("here", "tidyverse", "readxl", 
             "quarto", "easypackages", "here",
             "scales", "qs", "sf", "ggpmisc",
             "rlang", "broom", "knitr", "gt"
             )

pacman::p_load(char = pacotes)
```

Script com funções auxiliares para gráficos.

```{r}
#| label: aux-funs

source(here::here("R/utils.R"))
```

## Obtenção dos dados

Informações das EMC

```{r}
#| label: down-info

# link das informações das EMCs
link_info_emcs <- "https://portal.inmet.gov.br/uploads/normais/Normal-Climatologica-ESTA%C3%87%C3%95ES.xlsx"

# nome do arquivo para salvar as informações das EMCs
file_info_emc <- here::here(glue::glue("output/info-emc.xlsx"))

# download 
download.file(
  url = link_info_emcs, 
  destfile = file_info_emc, 
  method = "wget", 
  mode = "wb" 
  )

```

Dados de T~max~ e T~min~

```{r}
#| label: down-temps

# link do arquivo de Tmax
link_tmax <- "https://portal.inmet.gov.br/uploads/normais/Normal-Climatologica-TMAX.xlsx"

# nome do arquivo para salvar dados de Tmax
file_tmax <- here::here(glue::glue("output/{basename(link_tmax)}"))

# download 
download.file(
  url = link_tmax, 
  destfile = file_tmax, 
  mode = "wb" 
  )

# link do arquivo de Tmin 
link_tmin <- "https://portal.inmet.gov.br/uploads/normais/Normal-Climatologica-TMIN.xlsx"

# nome do arquivo para salvar dados de Tmin
file_tmin <- here::here(glue::glue("output/{basename(link_tmin)}"))

# downlaod
download.file(
  url = link_tmin, 
  destfile = file_tmin,
  mode = "wb" 
  )

```

Dados de Temperatura compensada (T~comp~).

```{r}
#| label: down-temp-comp

# link do arquivo de Tmax
link_tcomp <- "https://portal.inmet.gov.br/uploads/normais/Normal-Climatologica-TMEDSECA.xlsx"

# nome do arquivo para salvar dados de Tmax
file_tcomp <- here::here(glue::glue("output/{basename(link_tcomp)}"))

# download 
download.file(
  url = link_tcomp, 
  destfile = file_tcomp, 
  mode = "wb" 
  )

```

## Importação de dados

```{r}
#| label: read-info
info_emc <- readxl::read_xlsx(file_info_emc, skip = 2, col_names = TRUE, na = "") |> 
  janitor::clean_names() |> 
  dplyr::select(codigo:atitude) |> 
  dplyr::rename("altitude" = "atitude")
info_emc

```

```{r}
#| label: read-temp-files

tmax <- readxl::read_xlsx(file_tmax, skip = 2, col_names = TRUE, na = "-") |> 
  janitor::clean_names() |> 
  dplyr::select(codigo, nome_da_estacao, uf, ano) |> 
  dplyr::rename("tmax_anual" = "ano")

tmin <- readxl::read_xlsx(file_tmin, skip = 2, col_names = TRUE, na = "-") |> 
  janitor::clean_names() |> 
  dplyr::select(codigo, nome_da_estacao, uf, ano) |> 
  dplyr::rename("tmin_anual" = "ano")

tcomp <- readxl::read_xlsx(file_tcomp, skip = 2, col_names = TRUE, na = "-") |> 
  janitor::clean_names() |> 
  dplyr::select(codigo, nome_da_estacao, uf, ano) |> 
  dplyr::rename("tcomp_anual" = "ano")

```

## Cálculo da T~med~

```{r}
#| label: calc-tmed

# juncao das tabelas de tmax e tmin
tmed <- dplyr::full_join(tmax, tmin, by = c("codigo", "nome_da_estacao", "uf")) |> 
  # calculo da tmed
  dplyr::mutate(tmed_anual = (tmax_anual + tmin_anual)/2) |> 
  # remocao de linhas com dados faltantes
  dplyr::filter(!is.na(tmed_anual))

# juncao das tabelas de tmed e tcomp
tmed <- tcomp |> 
  dplyr::filter(!is.na(tcomp_anual)) |> 
  dplyr::inner_join(tmed, by = c("codigo", "nome_da_estacao", "uf"))

```

## Combinação da T~med~ e altitude

Junção das tabelas de T~med~ com as informações das EMCs.

```{r}
#| label: comb-info-tmed

data_inmet <- dplyr::inner_join(
  info_emc, tmed,
  by = c("codigo", "nome_da_estacao", "uf")
)


```

## Estimativa da TVVT via regressão linear simples

Para estimar a TVVT das EMCs faremos uma [regressão linear simples](https://pt.wikipedia.org/wiki/Regress%C3%A3o_linear_simples) entre T~med~ (preditando) e a altitude do terreno (preditor). Este modelo busca prever a T~med~ anual climatológica, somente em função da altitude e assume que esta relação é linear. A forma da equação da reta de regressão é $y = \widehat{b}x + \widehat{a}$; em que $\widehat{b}$ é a estimativa do coeficiente angular e $\widehat{a}$ a estimativa do coeficiente linear (intercepto). A interpretação do valor de $\widehat{a}$ é a temperatura média anual que intercepta o eixo ($y$) quando a altitude $x = 0$.

Ajuste da regressão para T~med~.

```{r}
#| label: reg-tmed

# calculo dos coeficientes da reta de regressao  
reg_tmed <- lm(tmed_anual ~ altitude, data = data_inmet)
reg_tmed_coefs <- reg_tmed |> broom::tidy()
knitr::kable(reg_tmed_coefs)
estats_reg_tmed  <- reg_tmed |> broom::glance()
knitr::kable(estats_reg_tmed)


# extracao dos coefs e conversão para °C/km
tvvt_tmed <- reg_tmed_coefs$estimate[2] * 1000
intercep_tmed <- reg_tmed_coefs$estimate[1]
r2_tmed <- estats_reg_tmed$r.squared
```

Gráfico para T~med~.

```{r}
#| label: plot-tmed
lapse_rate <- -6.5

plot_tvvt_tmed <-   
  # dados para plot e como mapear as variaveis nos eixos
  ggplot(data = data_inmet, mapping = aes(x = altitude, y = tmed_anual)) +
  # adicionar pontos
  geom_point() +
  # adicionar reta da regressão linear
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE, col = "green") +
  #geom_smooth(se = FALSE, linetype = 2, colour = "white") + 
  # adicionar mais marcas nos eixos 
  scale_y_continuous(
    name = "Temperatura média anual (°C)",
    breaks = scales::pretty_breaks(20)
    ) +
  scale_x_continuous(
    name = "Altitude (m)",
    breaks = scales::pretty_breaks(20)
    ) +
  geom_abline(
    slope = lapse_rate/1000,
    intercept = intercep_tmed, 
    linetype = 3
    ) +
  geom_smooth(se = FALSE, linetype = 2, linewidth = 0.3) +
  ggtitle(label = glue::glue("TVVT: {round(tvvt_tmed, 2)} °C/km, R² = {round(r2_tmed, 2)}"), 
          subtitle = glue::glue("Lapse rate: {round(lapse_rate, 3)} °C/km")) +
  theme(plot.title = element_text(color = "green"))
  
plot_tvvt_tmed
```

Ajuste da regressão para T~min~.

```{r}
#| label: reg-tmin

# calculo dos coeficientes da reta de regressao  
reg_tmin <- lm(tmin_anual ~ altitude, data = data_inmet)
reg_tmin_coefs <-  broom::tidy(reg_tmin)
knitr::kable(reg_tmin_coefs)
estats_reg_tmin  <- broom::glance(reg_tmin)
knitr::kable(estats_reg_tmin)


# extracao dos coefs e conversão para °C/km
tvvt_tmin <- reg_tmin_coefs$estimate[2] * 1000
tvvt_tmin
intercep_tmin <- reg_tmin_coefs$estimate[1]
intercep_tmin
r2_tmin <- estats_reg_tmin$r.squared
```

Gráfico para T~min~.

```{r}
#| label: plot-tmin

plot_tvvt_tmin <- plot_tvvt(data_inmet, 
                          yvar = "tmin_anual", 
                          lab_eixo_y = "Temperatura mínima anual", 
                          tvvt = tvvt_tmin, 
                          intercepto = intercep_tmin,
                          rquad =  r2_tmin,
                          cor_tvvt = "blue"
                          )
plot_tvvt_tmin



```

Ajuste da regressão para T~max~.

```{r}
#| label: reg-tmax

# calculo dos coeficientes da reta de regressao  
reg_tmax <- lm(tmax_anual ~ altitude, data = data_inmet)
reg_tmax_coefs <- broom::tidy(reg_tmax)
knitr::kable(reg_tmax_coefs)
estats_reg_tmax  <- broom::glance(reg_tmax)
knitr::kable(estats_reg_tmax)


# extracao dos coefs e conversão para °C/km
tvvt_tmax <- reg_tmax_coefs$estimate[2] * 1000
tvvt_tmax
intercep_tmax <- reg_tmax_coefs$estimate[1]
intercep_tmax
r2_tmax <- estats_reg_tmax$r.squared
```

Gráfico para T~max~.

```{r}
#| label: plot-tmax
plot_tvvt_tmax <- plot_tvvt(data_inmet, 
                          yvar = "tmax_anual", 
                          lab_eixo_y = "Temperatura mínima anual", 
                          tvvt = tvvt_tmax, 
                          intercepto = intercep_tmax, 
                          rquad = r2_tmax,
                          cor_tvvt = "red"
                          )
plot_tvvt_tmax
```

Ajuste da regressão para T~comp~.

```{r}
#| label: reg-tcomp

# calculo dos coeficientes da reta de regressao  
reg_tcomp <- lm(tcomp_anual ~ altitude, data = data_inmet)
reg_tcomp_coefs <-  broom::tidy(reg_tcomp)
knitr::kable(reg_tcomp_coefs)
estats_reg_tcomp  <- broom::glance(reg_tcomp)
knitr::kable(estats_reg_tcomp)


# extracao dos coefs e conversão para °C/km
tvvt_tcomp <- reg_tcomp_coefs$estimate[2] * 1000
tvvt_tcomp
intercep_tcomp <- reg_tcomp_coefs$estimate[1]
intercep_tcomp
r2_tcomp <- estats_reg_tcomp$r.squared
```

Gráfico para T~comp~.

```{r}
#| label: plot-tcomp

plot_tvvt_tcomp <- plot_tvvt(data_inmet, 
                          yvar = "tcomp_anual", 
                          lab_eixo_y = "Temperatura compensada anual", 
                          tvvt = tvvt_tcomp, 
                          intercepto = intercep_tcomp, 
                          rquad = r2_tcomp,
                          cor_tvvt = "gray30"
                          )
plot_tvvt_tcomp
```

## Comparação das TVVTs e qualidade dos ajustes das regressões.

```{r}

tab_resumo <-
  tibble::tribble(
~Temperatura,      ~TVVT,         ~dif_lapse_rate,    ~intercepto,  ~r2,
      "Tmed",  tvvt_tmed,  tvvt_tmed - lapse_rate,  intercep_tmed, estats_reg_tmed[["r.squared"]],
     "Tcomp", tvvt_tcomp, tvvt_tcomp - lapse_rate, intercep_tcomp, estats_reg_tcomp[["r.squared"]],
      "Tmax",  tvvt_tmax,  tvvt_tmax - lapse_rate,  intercep_tmax, estats_reg_tmax[["r.squared"]],
      "Tmin",  tvvt_tmin,  tvvt_tmin - lapse_rate,  intercep_tmin, estats_reg_tmin[["r.squared"]],
  )

knitr::kable(tab_resumo)

```

# Variação da TVVT por região

Vamos carregar os polígonos dos estados e das regiões do Brasil para visualização da localização das EMCs com dados para determinação da TVVT.

```{r}
#| label: poligonos-estados-regiao
pols_estados <- load_pols_states()

ggp_emcs <- ggplot(pols_estados) +
  geom_sf(aes(fill = regiao)) +
  geom_point(data = data_inmet, aes(x = longitude, y = latitude), 
             shape = 4, size = 0.7)
ggp_emcs

```

Em seguida, vamos incluir a informação da região nos dados `data_inmet` para visualizar as variações da TVVT por região. Para isso faremos a junção do `data_inmet` com os polígonos dos estados (`pols_estados`) usando como variável de ligação a coluna `uf` que é comum a ambos conjunto de dados.

```{r}
data_inmet <- dplyr::left_join(
  data_inmet,
  # tirar as coordenadas dos polígonos (coluna geometry)
  sf::st_drop_geometry(pols_estados),
  by = c("uf")
) |>
  dplyr::relocate(regiao) |> 
# limpando nomes das regiões
  dplyr::arrange(regiao)


kable(data_inmet)
nrow(data_inmet)

```

```{r}
#| include: false
# para auxilair alunos
readr::write_csv(pols_estados |> sf::st_drop_geometry(),
                 here("output", "regioes-estados.csv"))
```

```{r}
#| label: plot-ttvt_tcomp-por-reg

 # dados para plot e como mapear as variaveis nos eixos
 ggplot(
   data = data_inmet,
   mapping = aes(x = altitude, y = tcomp_anual, colour = regiao, shape = regiao)
 ) +
   # adicionar pontos
   stat_poly_line(se = FALSE) +
   stat_poly_eq(use_label(c("eq", "R2")), label.x = 0.99, size = 2.7) +
   geom_point() +
   # adicionar mais marcas nos eixos
   scale_y_continuous(
     name = "Temperatura compensada anual (°C)",
     breaks = scales::pretty_breaks(15),
     # limits = data_inmet |> dplyr::select(contains("_anual")) |> range()
   ) +
   geom_smooth(se = FALSE, linetype = 2, linewidth = 0.3) +
   scale_x_continuous(
     name = "Altitude (m)",
     breaks = scales::pretty_breaks(15)
   ) +
  geom_abline(
      slope = lapse_rate/1000,
      intercept = 19:30, linewidth = 0.3, 
      linetype = 3
    )
```

```{r}
#| label: plot-ttvt_tmed-por-reg
plot_tvvt_by_region(yvar = "tmed_anual")

```

```{r}
#| label: plot-ttvt_tmin-por-reg

 plot_tvvt_by_region(yvar = "tmin_anual", lr_intercs = 14:26)

```

```{r}
#| label: plot-ttvt_tmax-por-reg

plot_tvvt_by_region(yvar = "tmax_anual", lr_intercs = 24:36)
```
